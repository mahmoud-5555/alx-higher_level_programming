The ``7-base_geometry`` module
======================

Using ``Error test type of the prameters``
-------------------

This is an example text file in reStructuredText format.  First import
``BaseGeometry class`` from the ``7-base_geometry `` module:
import module:
>>> BaseGeometry = __import__('7-base_geometry').BaseGeometry

test cases:
>>> bg = BaseGeometry()
>>> bg.integer_validator("my_int", 12)
>>> bg.integer_validator("width", 89)

falier_testcaes:
>>> bg.integer_validator("name", "John")
Traceback (most recent call last):
...
TypeError: name must be an integer
>>> bg.integer_validator("age", 0)
Traceback (most recent call last):
...
ValueError: age must be greater than 0
>>> bg.integer_validator("distance", -4)
Traceback (most recent call last):
...
ValueError: distance must be greater than 0

>>> bg.integer_validator(15, 12)
Traceback (most recent call last):
...
TypeError: parameter name must be a string
>>> bg.integer_validator(True, 12)
Traceback (most recent call last):
...
TypeError: parameter name must be a string
>>> bg.integer_validator(["test", "test"], 12)
Traceback (most recent call last):
...
TypeError: parameter name must be a string
>>> bg.integer_validator('', 12)
Traceback (most recent call last):
...
ValueError: name cannot be empty
